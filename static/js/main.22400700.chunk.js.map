{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","components/Counter.js","components/Efekt.js","components/Posts.js","components/ListForm.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","console","log","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","todo","map","index","isComplate","style","width","onClick","TodoList","setTodos","test","newTodos","updatedTodos","isComplete","removeArr","filter","todoId","newValue","prev","item","Counter","count","setCount","prevCount","Efekt","items","setItems","show","setShow","user","setUser","useEffect","fetch","then","response","json","tempItems","mapNames","getUser","display","flexDirection","Posts","setType","ListForm","listItem","setListItem","list","setList","addList","mapList","App","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22400700.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n        console.log(input)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n        \r\n        setInput('');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                <input type='text' placeholder='Add a todo' value={input}\r\n                name='text' className='todo-input'\r\n                onChange={handleChange}/>\r\n                <button className='todo-button'>Add todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'    \r\nimport TodoList from './TodoList' \r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = (value, todo) => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplate ? 'todo-row complete' : 'todo-row'} key={index}>\r\n            <div style={{width: '14rem'}} key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n                />\r\n                <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className='edit-icon'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = (todo) => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div className='todo-app'>\r\n            <h1>Add to your todo list</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useEffect, useState } from 'react'\r\n\r\nconst Counter = () => {\r\n    const [count, setCount] = useState(() => {\r\n        return 0;\r\n    })\r\n    \r\n    const reduceCount = () => {\r\n        setCount(prevCount => prevCount -1)\r\n    }\r\n    const addCount = () => {\r\n        setCount(prevCount => prevCount +1)\r\n    }\r\n    // useEffect\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={reduceCount}>-</button>\r\n            <span>{count}</span>\r\n            <button onClick={addCount}>+</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Counter;","import React, {useState, useEffect} from 'react';\r\n\r\nconst Efekt = () => {\r\n    \r\n    const [items, setItems] = useState ([]);\r\n    const [show, setShow] = useState(false);\r\n    const [user, setUser] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n            fetch(`https://jsonplaceholder.typicode.com/users`)\r\n            .then(response => response.json())\r\n            .then(json => setItems(json))\r\n\r\n    }, [])\r\n    \r\n    const getUser = () => {\r\n        const tempItems = items.map(item => ({\r\n             'name': item.name\r\n        }))\r\n        const mapNames = tempItems.map(item =>{\r\n            return <li>{item.name}</li>\r\n        })\r\n        setUser(mapNames)\r\n\r\n        console.log(tempItems)\r\n        console.log(user)\r\n        setShow(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            { show === false ?\r\n                <button onClick={(e) => getUser(e)} style={{width: '7rem'}}>Show users</button>\r\n                :\r\n                <button onClick={() => setShow(false)} style={{width: '7rem'}}>Hide users</button>\r\n            }\r\n            { show === true ?\r\n            // <pre style={{display:'flex', flexDirection:'column', width: '7rem'}}>{JSON.stringify(user)}</pre>\r\n            <pre style={{display:'flex', flexDirection:'column', width: '7rem'}}>{user}</pre>\r\n            :\r\n            <pre></pre>\r\n            \r\n            }\r\n        </div>  \r\n    )\r\n\r\n}\r\n\r\nexport default Efekt;","import React, {useState, useEffect} from 'react';\r\n\r\nconst Posts = () => {\r\n    const [type, setType] = useState ('posts');\r\n\r\n    return(\r\n        <div>\r\n                <button onClick={() => setType('posts')}>Posts</button>\r\n                <button onClick={() => setType('users')}>Posts</button>\r\n                <button onClick={() => setType('comments')}>Posts</button>  \r\n                <h1>{type}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, {useEffect, useState} from 'react'\r\n\r\nconst ListForm = (props) => {\r\n    const [listItem, setListItem] = useState('');\r\n    const [list, setList] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n\r\n    const handleChange = (e) =>{\r\n        setListItem(e.target.value);\r\n        console.log(listItem)\r\n    }\r\n    // useEffect(() => {setListItem()})\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        let addList = listItem;\r\n        if(addList !== '') {\r\n            setList([...list, addList])\r\n        }\r\n        setListItem('');\r\n        const mapList = list.map(item =>{\r\n            return <li>{item}</li>\r\n        })\r\n        setUser(mapList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n            <input type='text' placeholder='Add to the list' value={listItem}\r\n                name='text' onChange={handleChange}\r\n            ></input>\r\n            <button>Add</button>\r\n            <pre style={{display:'flex', flexDirection:'column', width: '7rem'}}>{user}</pre>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListForm;","import './App.css';\nimport React from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport Counter from './components/Counter'\nimport Efekt from './components/Efekt'\nimport Posts from './components/Posts'\nimport ListForm from './components/ListForm';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{display: 'flex', flexDirection:'row' }}>\n      <TodoList/>\n      <div style={{marginLeft: '5rem'}}>\n      <h1>Counter</h1>\n        <Counter/>\n      </div>\n      <div style={{marginLeft: '5rem'}}>\n      <h1>Api</h1>\n        <Efekt/>\n      </div>\n      <div style={{marginLeft: '5rem'}}>\n      <h1>Render</h1>\n        <Posts/>\n      </div>\n      <div style={{marginLeft: '5rem'}}>\n      <h1>List</h1>\n        <ListForm/>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}